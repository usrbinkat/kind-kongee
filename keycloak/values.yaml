# helm show values bitnami/keycloak > keycloak/values.yaml
replicaCount: 1
nameOverride: "keycloak"
fullnameOverride: ""
commonLabels: {"nameOwner": "kongeelabs"}
global:
  storageClass: ""

commonAnnotations: {}
clusterDomain: cluster.local
extraDeploy: []
hostAliases: []
image:
  registry: docker.io
  repository: bitnami/keycloak
  tag: 15.0.2-debian-10-r0
  pullPolicy: IfNotPresent
auth:
  createAdminUser: true
  adminUser: "keycloak_admin"
  adminPassword: "keycloak_admin"
  managementUser: "keycloak_manager"
  managementPassword: "keycloak_manager"
service:
  type: ClusterIP
  tls:
    enabled: true
    autoGenerated: true
ingress:
  enabled: false
  certManager: true
  hostname: keycloak.kongeelabs.arpa
  ingressClassName: "kong"
  path: /
  pathType: ImplementationSpecific
  annotations: {}
    cert-manager.io/cluster-issuer:
  ## @param ingress.tls Enable TLS configuration for the hostname defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
  ## You can use the ingress.secrets parameter to create this TLS secret, relay on cert-manager to create it, or
  ## let the chart create self-signed certificates for you
  ##
  tls: false
  extraHosts:
    - name: keycloak.local
      path: /
    - name: keycloak.kongeelabs.arpa
      path: /
  extraTls:
  - hosts:
      - keycloak.local
    secretName: keycloak.local-tls
  extraTls: []
  ## @param ingress.secrets If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or -----BEGIN RSA PRIVATE KEY-----
  ## name should line up with a secretName set further up
  ## Example
  ## secrets:
  ##   - name: aspnet-core.local-tls
  ##     key: ""
  ##     certificate: ""
  ##
  secrets: []
  existingSecret: ""
  servicePort: http
networkPolicy:
  enabled: false
  allowExternal: true
  additionalRules: {}

serviceAccount:
  create: true
  name: ""
rbac:
  create: false
  rules: []
pdb:
  create: false
  minAvailable: 1
  maxUnavailable: ""
autoscaling:
  enabled: false
metrics:
  enabled: false
postgresql:
  enabled: true
  postgresqlUsername: bn_keycloak
  postgresqlPassword: some-password
  postgresqlDatabase: bitnami_keycloak
  existingSecret: ""
  persistence:
    enabled: true

externalDatabase:
  host: ""
  port: 5432
  user: bn_keycloak
  password: ""
  database: bitnami_keycloak
  existingSecret: ""

