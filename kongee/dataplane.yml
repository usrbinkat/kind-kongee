# helm install dataplane kong/kong --namespace kong --values ./dataplane.yml --set ingressController.installCRDs=false
namespace: kong
replicaCount: 2
image:
  repository: kong/kong-gateway
  tag: "2.5"
deployment:
  kong:
    enabled: true
    daemonset: false
env:
  role: data_plane
  database: "off"
  plugins: bundled
  log_level: debug
  prefix: /kong_prefix/
  nginx_worker_processes: "2"
  lua_package_path: /opt/?.lua;;

  cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
  cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key
  lua_ssl_trusted_certificate: /etc/ssl/certs/ca-certificates.crt 

  cluster_control_plane: controlplane-kong-cluster.kong.svc.cluster.local:8005
  cluster_telemetry_endpoint: controlplane-kong-clustertelemetry.kong.svc.cluster.local:8006

  proxy_stream_access_log: /dev/stdout
  proxy_stream_error_log: /dev/stdout
  status_error_log: /dev/stdout
  proxy_access_log: /dev/stdout
  proxy_error_log: /dev/stdout

secretVolumes: 
  - kong-cluster-cert
  - kong-tls

################################
## Kind localhost hostport
proxy:
  enabled: true
  type: ClusterIP
  http:
    enabled: true
    hostPort: 80
    containerPort: 8080
  tls:
    enabled: true
    hostPort: 443
    containerPort: 8443
  ingress:
    enabled: false
  labels:
    enable-metrics: true
  annotations:
    prometheus.io/port: "9542"
    prometheus.io/scrape: "true"

################################
## MetalLB LoadBalancer
proxy:
  enabled: true
  type: LoadBalancer   
  loadBalancerIP: 192.168.1.66
  http:
    enabled: false
    servicePort: 80
    containerPort: 8080
  tls:
    enabled: true
    servicePort: 443
    containerPort: 8443
  ingress:
    enabled: false
  labels:
    enable-metrics: true
  annotations:
    prometheus.io/port: "9542"
    prometheus.io/scrape: "true"

admin:
  enabled: false
portal:
  enabled: false
cluster:
  enabled: false
manager:
  enabled: false
portalapi:
  enabled: false
migrations:
  preUpgrade: false
  postUpgrade: false
ingressController:
  enabled: false
  installCRDs: false
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/instance
            operator: In
            values:
            - dataplane
        topologyKey: kubernetes.io/hostname
      weight: 100
